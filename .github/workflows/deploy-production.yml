name: Build and push the tagged build to production

on:
  push:
    tags:
      - 'v*'
jobs:
  build_push_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: contoso-website
          tag-semver: |
            {{raw}}
          tag-match: 
            \d{1,3}.\d{1,3}.\d{1,3}
          tag-latest: false
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}
          registry: ${{ secrets.ACR_NAME }}
      - name: Build and push production image
        uses: docker/build-push-action@v2.2.1
        with:
          context: .
          tags: ${{ secrets.ACR_NAME }}/${{ steps.docker_meta.outputs.tags }}
          push: true
  deploy:
    runs-on: ubuntu-latest
    needs: [build_push_image]
    name: Deploy to Production
    steps:
      - uses: actions/checkout@v2
      
      - name: Helm tool installer
        uses: Azure/setup-helm@v1
        with:
          # Version of helm
          version: latest
        
      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v1
        with:
          # Acceptable values: kubeconfig or service-account
          method: kubeconfig
          # Kubernetes Config
          kubeconfig: ${{ secrets.AZURE_CREDENTIALS}}
        id: setcontext
        
      - name: Create secret in K8S cluster in production namespace
        uses: Azure/k8s-create-secret@v1.1
        with:
          # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
          namespace: production
          # Container registry url
          container-registry-url: ${{ secrets.ACR_NAME }}
          # Container registry username
          container-registry-username: ${{ secrets.ACR_LOGIN }}
          # Container registry password
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: acr-secret
        id: create-secret 
          
      # ... File omitted
      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace production \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }}
            --set image.tag=${GITHUB_REF##*/}
        
